name: Deploy to AWS

on:
  push:
    branches:
      - develop
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build TypeScript
      run: npm run build

    - name: Build Web API
      run: |
        chmod +x build-web-api.sh
        ./build-web-api.sh

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Build Frontend
      run: |
        # Set environment based on branch
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          export CDK_ENV=prod
          export GOOGLE_CLIENT_ID_PROD=${{ secrets.GOOGLE_CLIENT_ID_PROD }}
        else
          export CDK_ENV=dev
          export GOOGLE_CLIENT_ID_DEV=${{ secrets.GOOGLE_CLIENT_ID_DEV }}
        fi
        
        # Build frontend with environment
        npm run build:frontend -- --env=$CDK_ENV

    - name: Deploy to AWS
      run: |
        # Set environment based on branch
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          export CDK_ENV=prod
        else
          export CDK_ENV=dev
        fi
        
        # Deploy CDK stack (this will also deploy the frontend from build/frontend)
        npx cdk deploy --require-approval never
        
    - name: Deploy complete
      run: |
        echo "‚úÖ Deployment complete!"
        echo "üåê Frontend URL: http://alexa-voice-memo-${CDK_ENV:-dev}-frontend.s3-website-ap-northeast-1.amazonaws.com"